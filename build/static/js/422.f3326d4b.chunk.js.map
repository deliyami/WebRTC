{"version":3,"file":"static/js/422.f3326d4b.chunk.js","mappings":"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","sources":["pages/chat.tsx"],"sourcesContent":["import React, { lazy, useRef, useEffect, useState } from 'react'\nimport * as Kalidokit from 'kalidokit'\nimport socketIOClient, { Socket } from 'socket.io-client'\nimport { Router, Link, useParams } from 'react-router-dom'\nimport { Camera } from '@mediapipe/camera_utils'\nimport { ExtendedCamera } from '../interfaces/extendedCamera'\nimport { \n  Clock,\n  DirectionalLight,\n  Euler,\n  PerspectiveCamera,\n  Scene,\n  Quaternion,\n  WebGLRenderer,\n  Vector3\n} from 'three'\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { CanvasRef } from '../components/canvas'\nimport { clamp, lerp } from 'three/src/math/MathUtils'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nconst Canvas = lazy(() => import('../components/canvas'))\n\nconst SOCKET_URL = `${process.env.REACT_APP_BACKEND_HOST}:${process.env.REACT_APP_BACKEND_PORT}`\n\nconst Chat = () => {\n    // 소켓정보를 담을 Ref\n  const socketRef = useRef<Socket>()\n  // 자신의 스트림\n  const streamRef = useRef<MediaStream>()\n  // 자신의 비디오\n  const myVideoRef = useRef<HTMLVideoElement>(document.createElement('video'))\n  const myCanvasRef = useRef<HTMLCanvasElement>(null)\n  const myOldLookTarget = useRef<Euler>(new Euler())\n  const mySceneRef = useRef<Scene>(new Scene())\n  const myRendererRef = useRef<WebGLRenderer>()\n  const myOrbitCameraRef = useRef<PerspectiveCamera>()\n  const myClockRef = useRef<Clock>()\n  const myVrmRef = useRef<VRM>();\n  // 다른사람의 비디오\n  // @ts-ignore\n  const remoteResultsRef = useRef<Results>(undefined)\n  const remoteCanvasRef = useRef<HTMLCanvasElement>(null)\n  const remoteOldLookTarget = useRef<Euler>(new Euler())\n  const remoteSceneRef = useRef<Scene>(new Scene())\n  const remoteRendererRef = useRef<WebGLRenderer>()\n  const remoteOrbitCameraRef = useRef<PerspectiveCamera>()\n  const remoteClockRef = useRef<Clock>()\n  const remoteVrmRef = useRef<VRM>();\n  // const scene = useRef<Scene>(new Scene())\n\n  const [ successMyCanvas, setSuccessMyCanvas ] = useState<Boolean>(false);\n\n  // peerConnection\n  const peerRef = useRef<RTCPeerConnection>(new RTCPeerConnection({\n    iceServers: [\n      {\n        urls: 'stun:stun.l.google.com:19302',\n      },\n    ],\n  }))\n  // @ts-ignore\n  const holisticRef = useRef<Holistic>()\n  const dataChannelRef = useRef<RTCDataChannel>()\n  const { roomID } = useParams();\n\n  const checkData = (e: any) => {\n    e.preventDefault()\n    console.log(dataChannelRef.current?.readyState);\n    dataChannelRef.current?.send('hello, world!')\n    // dataChannelRef.current = peerRef.current!.createDataChannel(\"ChatRoom\")\n  }\n\n  const calculateVideo = async () => {\n    if (holisticRef.current && myVideoRef.current) {\n      await holisticRef.current.send({image: myVideoRef.current});\n    }\n  }\n  const myAnimate = async () => {\n    await calculateVideo()\n    \n    if (!(myClockRef.current && myRendererRef.current && myOrbitCameraRef.current)) return\n    if (myVrmRef.current) {\n      myVrmRef.current.update(myClockRef.current.getDelta());\n    }\n    myRendererRef.current.render(mySceneRef.current, myOrbitCameraRef.current);\n\n    requestAnimationFrame(myAnimate)\n  }\n  const remoteAnimate = () => {\n    console.log('remote animate');\n    if (remoteResultsRef.current) remoteResults(remoteResultsRef.current)\n    \n    if (!(remoteClockRef.current && remoteRendererRef.current && remoteOrbitCameraRef.current)) return\n    if (remoteVrmRef.current) {\n      remoteVrmRef.current.update(remoteClockRef.current.getDelta());\n    }\n    remoteRendererRef.current.render(remoteSceneRef.current, remoteOrbitCameraRef.current);\n  }\n  \n  const setMedia = async () => {\n    try {\n      // @ts-ignore\n      const holistic = await new Holistic({locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n      }});\n      holistic.setOptions({\n        modelComplexity: 1,\n        smoothLandmarks: true,\n        minDetectionConfidence: 0.7,\n        minTrackingConfidence: 0.7,\n        refineFaceLandmarks: true,\n      })\n      holisticRef.current = holistic\n\n      const myCamera = await new Camera(myVideoRef.current!, {\n        onFrame: async () => {\n          // await holistic.send({image: myVideoRef.current!});\n        },\n        width: 640,\n        height: 480\n      }) as ExtendedCamera\n      await myCamera.start()\n      const stream = myCamera.g\n      \n      streamRef.current = stream\n      myVideoRef.current.srcObject = stream\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  \n  const getMyModel = async () => {\n    const loader = new GLTFLoader();\n    loader.crossOrigin = \"anonymous\";\n    // Import model from URL, add your own model here\n    await loader.load(\n      \"https://cdn.glitch.com/29e07830-2317-4b15-a044-135e73c7f840%2FAshtra.vrm?v=1630342336981\",\n      async gltf => {\n        await VRMUtils.removeUnnecessaryJoints(gltf.scene);\n        await VRM.from(gltf).then(v => {\n          mySceneRef.current.add(v.scene);\n          myVrmRef.current = v\n          myVrmRef.current.scene.rotation.y = Math.PI;\n        });\n      },\n\n      progress =>\n        console.log(\n          \"Loading model...\",\n          100.0 * (progress.loaded / progress.total),\n          \"%\"\n        ),\n\n      error => console.error(error)\n    );\n  }\n  const setMyThree =  () => {\n    myRendererRef.current = new WebGLRenderer({\n      canvas: myCanvasRef.current!,\n      alpha:true\n    });\n    myRendererRef.current.setPixelRatio(window.devicePixelRatio);\n\n    // camera\n    myOrbitCameraRef.current = new PerspectiveCamera(35, 300 / 225, 0.1, 1000);\n    myOrbitCameraRef.current.position.set(-0.1, 1.4, 0.7);\n\n    // controls\n    const orbitControls = new OrbitControls(myOrbitCameraRef.current, myRendererRef.current.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(-0.1, 1.4, 0.0);\n    orbitControls.update();\n\n    // light\n    const light = new DirectionalLight(0xffffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    mySceneRef.current.add(light);\n    myClockRef.current = new Clock()\n  }\n\n  const getRemoteModel = async () => {\n    const loader = new GLTFLoader();\n    loader.crossOrigin = \"anonymous\";\n    // Import model from URL, add your own model here\n    await loader.load(\n      \"https://cdn.glitch.com/29e07830-2317-4b15-a044-135e73c7f840%2FAshtra.vrm?v=1630342336981\",\n      async gltf => {\n        await VRMUtils.removeUnnecessaryJoints(gltf.scene);\n        await VRM.from(gltf).then(v => {\n          remoteSceneRef.current.add(v.scene);\n          remoteVrmRef.current = v\n          remoteVrmRef.current.scene.rotation.y = Math.PI;\n        });\n      },\n\n      progress =>\n        console.log(\n          \"Loading Remote model...\",\n          100.0 * (progress.loaded / progress.total),\n          \"%\"\n        ),\n\n      error => console.error(error)\n    );\n  }\n  const setRemoteThree =  () => {\n    remoteRendererRef.current = new WebGLRenderer({\n      canvas: remoteCanvasRef.current!,\n      alpha:true\n    });\n    remoteRendererRef.current.setPixelRatio(window.devicePixelRatio);\n\n    // camera\n    remoteOrbitCameraRef.current = new PerspectiveCamera(35, 300 / 225, 0.1, 1000);\n    remoteOrbitCameraRef.current.position.set(-0.1, 1.4, 0.7);\n\n    // controls\n    const orbitControls = new OrbitControls(remoteOrbitCameraRef.current, remoteRendererRef.current.domElement);\n    orbitControls.screenSpacePanning = true;\n    orbitControls.target.set(-0.1, 1.4, 0.0);\n    orbitControls.update();\n\n    // light\n    const light = new DirectionalLight(0xffffff);\n    light.position.set(1.0, 1.0, 1.0).normalize();\n    remoteSceneRef.current.add(light);\n\n    // async function animate() {\n    //   if (holisticRef.current && videoRef.current)\n    //   await holisticRef.current.send({image: videoRef.current});\n    // }\n    remoteClockRef.current = new Clock()\n  }\n  const setPeer = () => {\n    if (!(peerRef.current && streamRef.current)) return\n      // 스트림을 peerConnection에 등록\n      peerRef.current.addTrack(streamRef.current.getTracks()[0])\n\n      // iceCandidate 이벤트 \n      peerRef.current.onicecandidate = (e) => {\n        console.log('try candidate');\n        if (e.candidate) {\n          if (!socketRef.current) {\n            return;\n          }\n          console.log('receive candidate');\n          socketRef.current.emit('candidate', e.candidate, roomID);\n        }\n        // dataChannel.send('hello, world!')\n        console.log('ok candidate')\n      };\n      console.log('set peer data channel handler');\n      peerRef.current.ondatachannel = (e: RTCDataChannelEvent) => {\n        console.log('try peer data channel', e);\n        dataChannelRef.current = e.channel\n        dataChannelRef.current.onmessage = (e) => {\n          remoteResultsRef.current = JSON.parse(e.data)\n          // console.log('on message', remoteResultsRef.current)\n          // remoteResultsRef.current\n        }\n        dataChannelRef.current.onopen = () => {\n          console.log('open channel');\n        }\n      }\n\n      // 구 addStream 현 track 이벤트 \n      peerRef.current.ontrack = (e) => {\n        console.log('wow');\n        // if (remoteVideoRef.current) {\n        //   remoteVideoRef.current.srcObject = e.streams[0];\n        // }\n      }\n  }\n  const setSocket = () => {\n    // Socket connect\n    // socketRef.current = socketIOClient(SOCKET_URL)\n    if(!socketRef.current) return\n    // 마운트시 해당 방의 roomID을 서버에 전달\n    socketRef.current!.emit('join_room', {\n      room: roomID,\n    });\n      \n    // 기존 유저가 있고, 새로운 유저가 들어왔다면 오퍼생성\n    socketRef.current.on('all_users', (allUsers: Array<{ id: string }>) => {\n      console.log('hello, new User!');\n      if (allUsers.length > 0) {\n        createOffer();\n      }\n    });\n  \n    // offer를 전달받은 PeerB만 해당됩니다\n    // offer를 들고 만들어둔 answer 함수 실행\n    socketRef.current.on('getOffer', (sdp: RTCSessionDescription) => {\n      console.log('receive Offer');\n      console.log('another user offer', sdp);\n      createAnswer(sdp);\n    });\n    \n    // answer를 전달받을 PeerA만 해당됩니다.\n    // answer를 전달받아 PeerA의 RemoteDescription에 등록\n    socketRef.current.on('getAnswer', (sdp: RTCSessionDescription) => {\n      console.log('receive Answer');\n      console.log('another user offer', sdp);\n      if (!peerRef.current) {\n        return;\n      }\n      peerRef.current.setRemoteDescription(sdp);\n    });\n    \n    // 서로의 candidate를 전달받아 등록\n    socketRef.current.on('getCandidate', async (candidate: RTCIceCandidate) => {\n      if (!peerRef.current) {\n        return;\n      }\n      console.log('get candidate')\n      await peerRef.current.addIceCandidate(candidate);\n    });\n\n    socketRef.current.on('user_exit', async () => {\n      console.log('user exit')\n    })\n  }\n\n  const createOffer = async () => {\n    console.log('create Offer');\n    dataChannelRef.current = peerRef.current!.createDataChannel(\"ChatRoom\")\n    dataChannelRef.current.onmessage = (e) => {\n      \n      remoteResultsRef.current = JSON.parse(e.data)\n      // console.log('on message', remoteResultsRef.current);\n      // remoteResultsRef...\n    }\n    dataChannelRef.current.onopen = () => {\n      console.log('open channel');\n    }\n    \n    if (!(peerRef.current && socketRef.current)) {\n      return;\n    }\n    try {\n      // offer 생성\n      const sdp = await peerRef.current.createOffer();\n      // 자신의 sdp로 LocalDescription 설정\n      peerRef.current.setLocalDescription(sdp);\n      console.log('sent the offer');\n      console.log('my offer', sdp);\n      // offer 전달\n      socketRef.current.emit('offer', sdp, roomID);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  \n  const createAnswer = async (sdp: RTCSessionDescription) => {\n    // sdp : PeerA에게서 전달받은 offer\n    console.log('create Answer');\n    \n    if (!(peerRef.current && socketRef.current)) {\n      return;\n    }\n\n    try {\n      // PeerA가 전달해준 offer를 RemoteDescription에 등록해 줍시다.\n      peerRef.current.setRemoteDescription(sdp);\n      \n      // answer생성해주고\n      const answerSdp = await peerRef.current.createAnswer();\n      \n      // answer를 LocalDescription에 등록해 줍니다. (PeerB 기준)\n      peerRef.current.setLocalDescription(answerSdp);\n      console.log('sent the answer');\n      console.log('my offer', answerSdp);\n      socketRef.current.emit('answer', answerSdp, roomID);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // rigid control == animate\n  const rigRotation = (\n    vrmRef: React.MutableRefObject<VRM | undefined>,\n    name: keyof typeof VRMSchema.HumanoidBoneName,\n    rotation = { x: 0, y: 0, z: 0 },\n    dampener = 1,\n    lerpAmount = 0.3\n  ) => {\n    if (!vrmRef.current) return\n    const Part = vrmRef.current.humanoid?.getBoneNode(\n      VRMSchema.HumanoidBoneName[name]\n    );\n    if (!Part) {return}\n    \n    let euler = new Euler(\n      rotation.x * dampener,\n      rotation.y * dampener,\n      rotation.z * dampener\n    );\n    let quaternion = new Quaternion().setFromEuler(euler);\n    Part.quaternion.slerp(quaternion, lerpAmount); // interpolate\n  };\n  \n  const rigPosition = (\n    vrmRef: React.MutableRefObject<VRM | undefined>,\n    name: keyof typeof VRMSchema.HumanoidBoneName,\n    position = { x: 0, y: 0, z: 0 },\n    dampener = 1,\n    lerpAmount = 0.3\n  ) => {\n    if (!vrmRef.current) return\n    const Part = vrmRef.current.humanoid?.getBoneNode(\n      VRMSchema.HumanoidBoneName[name]\n    );\n    if (!Part) {return}\n    let vector = new Vector3(\n      position.x * dampener,\n      position.y * dampener,\n      position.z * dampener\n    );\n    Part.position.lerp(vector, lerpAmount); // interpolate\n  };\n  const rigFace = (riggedFace:Kalidokit.TFace, vrmRef: React.MutableRefObject<VRM | undefined>, oldLookTarget: React.MutableRefObject<Euler>) => {\n    if (!vrmRef.current) return\n    rigRotation(vrmRef, \"Neck\", riggedFace.head, 0.7);\n\n    // Blendshapes and Preset Name Schema\n    const Blendshape = vrmRef.current.blendShapeProxy;\n    const PresetName = VRMSchema.BlendShapePresetName;\n    if (!Blendshape || !PresetName) return\n\n    // Simple example without winking. Interpolate based on old blendshape, then stabilize blink with `Kalidokit` helper function.\n    // for VRM, 1 is closed, 0 is open.\n    riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1),Blendshape.getValue(PresetName.Blink) ?? 0, .5)\n    riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1),Blendshape.getValue(PresetName.Blink) ?? 0, .5)\n    riggedFace.eye = Kalidokit.Face.stabilizeBlink(riggedFace.eye,riggedFace.head.y)\n    Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n    \n    // Interpolate and set mouth blendshapes\n    Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I,Blendshape.getValue(PresetName.I) ?? 0, .5));\n    Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A,Blendshape.getValue(PresetName.A) ?? 0, .5));\n    Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E,Blendshape.getValue(PresetName.E) ?? 0, .5));\n    Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O,Blendshape.getValue(PresetName.O) ?? 0, .5));\n    Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U,Blendshape.getValue(PresetName.U) ?? 0, .5));\n\n    //PUPILS\n    //interpolate pupil and keep a copy of the value\n    let lookTarget =\n      new Euler(\n        lerp(oldLookTarget.current.x, riggedFace.pupil.y, .4),\n        lerp(oldLookTarget.current.y, riggedFace.pupil.x, .4),\n        0,\n        \"XYZ\"\n      )\n    oldLookTarget.current.copy(lookTarget)\n    vrmRef.current.lookAt?.applyer?.lookAt(lookTarget);\n  }\n  // @ts-ignore\n  const onResults: ResultsListener = (results: Results) => {\n    if (!(myCanvasRef.current && myVideoRef.current && myVrmRef.current)) return\n    if (dataChannelRef.current?.readyState === \"open\") dataChannelRef.current?.send(JSON.stringify(results))\n    // Take the results from `Holistic` and animate character based on its Face, Pose, and Hand Keypoints.\n    let riggedPose, riggedLeftHand, riggedRightHand, riggedFace;\n  \n    const faceLandmarks = results.faceLandmarks;\n    // Pose 3D Landmarks are with respect to Hip distance in meters\n    const pose3DLandmarks = results.ea;\n    // Pose 2D landmarks are with respect to videoWidth and videoHeight\n    const pose2DLandmarks = results.poseLandmarks;\n    // Be careful, hand landmarks may be reversed\n    const leftHandLandmarks = results.rightHandLandmarks;\n    const rightHandLandmarks = results.leftHandLandmarks;\n  \n    // Animate Face\n    if (faceLandmarks) {\n      riggedFace = Kalidokit.Face.solve(faceLandmarks,{\n        runtime:\"mediapipe\",\n        video: myVideoRef.current\n      });\n      if (!(riggedFace && myVrmRef)) return\n      // @ts-ignore\n      rigFace(riggedFace, myVrmRef, myOldLookTarget)\n    }\n  \n    // Animate Pose\n    if (pose2DLandmarks && pose3DLandmarks) {\n      riggedPose = Kalidokit.Pose.solve(pose3DLandmarks, pose2DLandmarks, {\n        runtime: \"mediapipe\",\n        video: myVideoRef.current,\n      });\n      if (!riggedPose) return\n      rigRotation(myVrmRef, \"Hips\", riggedPose.Hips.rotation, 0.7);\n      rigPosition(\n        myVrmRef,\n        \"Hips\",\n        {\n          x: -riggedPose.Hips.position.x, // Reverse direction\n          y: riggedPose.Hips.position.y + 1, // Add a bit of height\n          z: -riggedPose.Hips.position.z // Reverse direction\n        },\n        1,\n        0.07\n      );\n  \n      rigRotation(myVrmRef, \"Chest\", riggedPose.Spine, 0.25, .3);\n      rigRotation(myVrmRef, \"Spine\", riggedPose.Spine, 0.45, .3);\n  \n      rigRotation(myVrmRef, \"RightUpperArm\", riggedPose.RightUpperArm, 1, .3);\n      rigRotation(myVrmRef, \"RightLowerArm\", riggedPose.RightLowerArm, 1, .3);\n      rigRotation(myVrmRef, \"LeftUpperArm\", riggedPose.LeftUpperArm, 1, .3);\n      rigRotation(myVrmRef, \"LeftLowerArm\", riggedPose.LeftLowerArm, 1, .3);\n  \n      rigRotation(myVrmRef, \"LeftUpperLeg\", riggedPose.LeftUpperLeg, 1, .3);\n      rigRotation(myVrmRef, \"LeftLowerLeg\", riggedPose.LeftLowerLeg, 1, .3);\n      rigRotation(myVrmRef, \"RightUpperLeg\", riggedPose.RightUpperLeg, 1, .3);\n      rigRotation(myVrmRef, \"RightLowerLeg\", riggedPose.RightLowerLeg, 1, .3);\n    }\n  \n    // Animate Hands\n    if (leftHandLandmarks) {\n      riggedLeftHand = Kalidokit.Hand.solve(leftHandLandmarks, \"Left\");\n      if(!riggedLeftHand || !riggedPose) return\n      rigRotation(myVrmRef, \"LeftHand\", {\n        // Combine pose rotation Z and hand rotation X Y\n        z: riggedPose.LeftHand.z,\n        y: riggedLeftHand.LeftWrist.y,\n        x: riggedLeftHand.LeftWrist.x\n      });\n      rigRotation(myVrmRef, \"LeftRingProximal\", riggedLeftHand.LeftRingProximal);\n      rigRotation(myVrmRef, \"LeftRingIntermediate\", riggedLeftHand.LeftRingIntermediate);\n      rigRotation(myVrmRef, \"LeftRingDistal\", riggedLeftHand.LeftRingDistal);\n      rigRotation(myVrmRef, \"LeftIndexProximal\", riggedLeftHand.LeftIndexProximal);\n      rigRotation(myVrmRef, \"LeftIndexIntermediate\", riggedLeftHand.LeftIndexIntermediate);\n      rigRotation(myVrmRef, \"LeftIndexDistal\", riggedLeftHand.LeftIndexDistal);\n      rigRotation(myVrmRef, \"LeftMiddleProximal\", riggedLeftHand.LeftMiddleProximal);\n      rigRotation(myVrmRef, \"LeftMiddleIntermediate\", riggedLeftHand.LeftMiddleIntermediate);\n      rigRotation(myVrmRef, \"LeftMiddleDistal\", riggedLeftHand.LeftMiddleDistal);\n      rigRotation(myVrmRef, \"LeftThumbProximal\", riggedLeftHand.LeftThumbProximal);\n      rigRotation(myVrmRef, \"LeftThumbIntermediate\", riggedLeftHand.LeftThumbIntermediate);\n      rigRotation(myVrmRef, \"LeftThumbDistal\", riggedLeftHand.LeftThumbDistal);\n      rigRotation(myVrmRef, \"LeftLittleProximal\", riggedLeftHand.LeftLittleProximal);\n      rigRotation(myVrmRef, \"LeftLittleIntermediate\", riggedLeftHand.LeftLittleIntermediate);\n      rigRotation(myVrmRef, \"LeftLittleDistal\", riggedLeftHand.LeftLittleDistal);\n    }\n    if (rightHandLandmarks) {\n      riggedRightHand = Kalidokit.Hand.solve(rightHandLandmarks, \"Right\");\n      if(!riggedRightHand || !riggedPose) return\n      rigRotation(myVrmRef, \"RightHand\", {\n        // Combine Z axis from pose hand and X/Y axis from hand wrist rotation\n        z: riggedPose.RightHand.z,\n        y: riggedRightHand.RightWrist.y,\n        x: riggedRightHand.RightWrist.x\n      });\n      rigRotation(myVrmRef, \"RightRingProximal\", riggedRightHand.RightRingProximal);\n      rigRotation(myVrmRef, \"RightRingIntermediate\", riggedRightHand.RightRingIntermediate);\n      rigRotation(myVrmRef, \"RightRingDistal\", riggedRightHand.RightRingDistal);\n      rigRotation(myVrmRef, \"RightIndexProximal\", riggedRightHand.RightIndexProximal);\n      rigRotation(myVrmRef, \"RightIndexIntermediate\",riggedRightHand.RightIndexIntermediate);\n      rigRotation(myVrmRef, \"RightIndexDistal\", riggedRightHand.RightIndexDistal);\n      rigRotation(myVrmRef, \"RightMiddleProximal\", riggedRightHand.RightMiddleProximal);\n      rigRotation(myVrmRef, \"RightMiddleIntermediate\", riggedRightHand.RightMiddleIntermediate);\n      rigRotation(myVrmRef, \"RightMiddleDistal\", riggedRightHand.RightMiddleDistal);\n      rigRotation(myVrmRef, \"RightThumbProximal\", riggedRightHand.RightThumbProximal);\n      rigRotation(myVrmRef, \"RightThumbIntermediate\", riggedRightHand.RightThumbIntermediate);\n      rigRotation(myVrmRef, \"RightThumbDistal\", riggedRightHand.RightThumbDistal);\n      rigRotation(myVrmRef, \"RightLittleProximal\", riggedRightHand.RightLittleProximal);\n      rigRotation(myVrmRef, \"RightLittleIntermediate\", riggedRightHand.RightLittleIntermediate);\n      rigRotation(myVrmRef, \"RightLittleDistal\", riggedRightHand.RightLittleDistal);\n    }\n  };\n\n  // @ts-ignore\n  const remoteResults = (results: Results) => {\n    if (!(myCanvasRef.current && myVideoRef.current && myVrmRef.current)) return\n    console.log('remote results');\n    // Take the results from `Holistic` and animate character based on its Face, Pose, and Hand Keypoints.\n    let riggedPose, riggedLeftHand, riggedRightHand, riggedFace;\n  \n    const faceLandmarks = results.faceLandmarks;\n    // Pose 3D Landmarks are with respect to Hip distance in meters\n    const pose3DLandmarks = results.ea;\n    // Pose 2D landmarks are with respect to videoWidth and videoHeight\n    const pose2DLandmarks = results.poseLandmarks;\n    // Be careful, hand landmarks may be reversed\n    const leftHandLandmarks = results.rightHandLandmarks;\n    const rightHandLandmarks = results.leftHandLandmarks;\n  \n    // Animate Face\n    if (faceLandmarks) {\n      riggedFace = Kalidokit.Face.solve(faceLandmarks,{\n        runtime:\"mediapipe\",\n      });\n      if (!riggedFace) return\n      rigFace(riggedFace, remoteVrmRef, remoteOldLookTarget)\n    }\n  \n    // Animate Pose\n    if (pose2DLandmarks && pose3DLandmarks) {\n      riggedPose = Kalidokit.Pose.solve(pose3DLandmarks, pose2DLandmarks, {\n        runtime: \"mediapipe\",\n      });\n      if (!riggedPose) return\n      rigRotation(remoteVrmRef, \"Hips\", riggedPose.Hips.rotation, 0.7);\n      rigPosition(\n        remoteVrmRef,\n        \"Hips\",\n        {\n          x: -riggedPose.Hips.position.x, // Reverse direction\n          y: riggedPose.Hips.position.y + 1, // Add a bit of height\n          z: -riggedPose.Hips.position.z // Reverse direction\n        },\n        1,\n        0.07\n      );\n  \n      rigRotation(remoteVrmRef, \"Chest\", riggedPose.Spine, 0.25, .3);\n      rigRotation(remoteVrmRef, \"Spine\", riggedPose.Spine, 0.45, .3);\n  \n      rigRotation(remoteVrmRef, \"RightUpperArm\", riggedPose.RightUpperArm, 1, .3);\n      rigRotation(remoteVrmRef, \"RightLowerArm\", riggedPose.RightLowerArm, 1, .3);\n      rigRotation(remoteVrmRef, \"LeftUpperArm\", riggedPose.LeftUpperArm, 1, .3);\n      rigRotation(remoteVrmRef, \"LeftLowerArm\", riggedPose.LeftLowerArm, 1, .3);\n  \n      rigRotation(remoteVrmRef, \"LeftUpperLeg\", riggedPose.LeftUpperLeg, 1, .3);\n      rigRotation(remoteVrmRef, \"LeftLowerLeg\", riggedPose.LeftLowerLeg, 1, .3);\n      rigRotation(remoteVrmRef, \"RightUpperLeg\", riggedPose.RightUpperLeg, 1, .3);\n      rigRotation(remoteVrmRef, \"RightLowerLeg\", riggedPose.RightLowerLeg, 1, .3);\n    }\n  \n    // Animate Hands\n    if (leftHandLandmarks) {\n      riggedLeftHand = Kalidokit.Hand.solve(leftHandLandmarks, \"Left\");\n      if(!riggedLeftHand || !riggedPose) return\n      rigRotation(remoteVrmRef, \"LeftHand\", {\n        // Combine pose rotation Z and hand rotation X Y\n        z: riggedPose.LeftHand.z,\n        y: riggedLeftHand.LeftWrist.y,\n        x: riggedLeftHand.LeftWrist.x\n      });\n      rigRotation(remoteVrmRef, \"LeftRingProximal\", riggedLeftHand.LeftRingProximal);\n      rigRotation(remoteVrmRef, \"LeftRingIntermediate\", riggedLeftHand.LeftRingIntermediate);\n      rigRotation(remoteVrmRef, \"LeftRingDistal\", riggedLeftHand.LeftRingDistal);\n      rigRotation(remoteVrmRef, \"LeftIndexProximal\", riggedLeftHand.LeftIndexProximal);\n      rigRotation(remoteVrmRef, \"LeftIndexIntermediate\", riggedLeftHand.LeftIndexIntermediate);\n      rigRotation(remoteVrmRef, \"LeftIndexDistal\", riggedLeftHand.LeftIndexDistal);\n      rigRotation(remoteVrmRef, \"LeftMiddleProximal\", riggedLeftHand.LeftMiddleProximal);\n      rigRotation(remoteVrmRef, \"LeftMiddleIntermediate\", riggedLeftHand.LeftMiddleIntermediate);\n      rigRotation(remoteVrmRef, \"LeftMiddleDistal\", riggedLeftHand.LeftMiddleDistal);\n      rigRotation(remoteVrmRef, \"LeftThumbProximal\", riggedLeftHand.LeftThumbProximal);\n      rigRotation(remoteVrmRef, \"LeftThumbIntermediate\", riggedLeftHand.LeftThumbIntermediate);\n      rigRotation(remoteVrmRef, \"LeftThumbDistal\", riggedLeftHand.LeftThumbDistal);\n      rigRotation(remoteVrmRef, \"LeftLittleProximal\", riggedLeftHand.LeftLittleProximal);\n      rigRotation(remoteVrmRef, \"LeftLittleIntermediate\", riggedLeftHand.LeftLittleIntermediate);\n      rigRotation(remoteVrmRef, \"LeftLittleDistal\", riggedLeftHand.LeftLittleDistal);\n    }\n    if (rightHandLandmarks) {\n      riggedRightHand = Kalidokit.Hand.solve(rightHandLandmarks, \"Right\");\n      if(!riggedRightHand || !riggedPose) return\n      rigRotation(remoteVrmRef, \"RightHand\", {\n        // Combine Z axis from pose hand and X/Y axis from hand wrist rotation\n        z: riggedPose.RightHand.z,\n        y: riggedRightHand.RightWrist.y,\n        x: riggedRightHand.RightWrist.x\n      });\n      rigRotation(remoteVrmRef, \"RightRingProximal\", riggedRightHand.RightRingProximal);\n      rigRotation(remoteVrmRef, \"RightRingIntermediate\", riggedRightHand.RightRingIntermediate);\n      rigRotation(remoteVrmRef, \"RightRingDistal\", riggedRightHand.RightRingDistal);\n      rigRotation(remoteVrmRef, \"RightIndexProximal\", riggedRightHand.RightIndexProximal);\n      rigRotation(remoteVrmRef, \"RightIndexIntermediate\",riggedRightHand.RightIndexIntermediate);\n      rigRotation(remoteVrmRef, \"RightIndexDistal\", riggedRightHand.RightIndexDistal);\n      rigRotation(remoteVrmRef, \"RightMiddleProximal\", riggedRightHand.RightMiddleProximal);\n      rigRotation(remoteVrmRef, \"RightMiddleIntermediate\", riggedRightHand.RightMiddleIntermediate);\n      rigRotation(remoteVrmRef, \"RightMiddleDistal\", riggedRightHand.RightMiddleDistal);\n      rigRotation(remoteVrmRef, \"RightThumbProximal\", riggedRightHand.RightThumbProximal);\n      rigRotation(remoteVrmRef, \"RightThumbIntermediate\", riggedRightHand.RightThumbIntermediate);\n      rigRotation(remoteVrmRef, \"RightThumbDistal\", riggedRightHand.RightThumbDistal);\n      rigRotation(remoteVrmRef, \"RightLittleProximal\", riggedRightHand.RightLittleProximal);\n      rigRotation(remoteVrmRef, \"RightLittleIntermediate\", riggedRightHand.RightLittleIntermediate);\n      rigRotation(remoteVrmRef, \"RightLittleDistal\", riggedRightHand.RightLittleDistal);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      \n      if (socketRef.current) return\n      socketRef.current = socketIOClient(SOCKET_URL, {secure: true})\n      // media setting \n      await setMedia()\n\n      await getMyModel()\n      await setMyThree()\n\n      await getRemoteModel()\n      await setRemoteThree()\n      \n      // for while TODO\n      // await holistic.current.send({image: stream});\n      \n      setPeer()\n      setSocket()\n      \n      holisticRef.current.onResults(onResults);\n      setSuccessMyCanvas(true)\n      setInterval(() => {\n        remoteAnimate()\n      }, 300);\n    })()\n\n    return () => {\n      // 언마운트시 socket disconnect\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (peerRef.current) {\n        peerRef.current.close();\n      }\n      if (streamRef.current) {\n        // 스트림 중지 및 트랙 해제\n        streamRef.current.getTracks().forEach((track) => {\n          track.stop()\n        });\n      }\n    }\n  }, [])\n  useEffect(() => {\n    if (!successMyCanvas) return\n    console.log('start my animate');\n    setSuccessMyCanvas(false)\n    myAnimate()\n  }, [ successMyCanvas ])\n  return (<>\n    <div>Chat desu</div>\n    <table>\n      <thead></thead>\n      <tbody>\n        <tr>\n          <td>Me</td>\n          <td>Another Person</td>\n        </tr>\n        <tr>\n          <td>\n            <canvas ref={myCanvasRef}></canvas>\n          </td>\n          <td>\n            <canvas ref={remoteCanvasRef}></canvas>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <button onClick={checkData}>check!</button>\n    <Link  to=\"/\">back home</Link>\n  </>)\n}\nexport default Chat;\n\n\n"],"names":["SOCKET_URL","concat","process","socketRef","useRef","streamRef","myVideoRef","document","createElement","myCanvasRef","myOldLookTarget","Euler","mySceneRef","Scene","myRendererRef","myOrbitCameraRef","myClockRef","myVrmRef","remoteResultsRef","undefined","remoteCanvasRef","remoteOldLookTarget","remoteSceneRef","remoteRendererRef","remoteOrbitCameraRef","remoteClockRef","remoteVrmRef","_useState","useState","_useState2","_slicedToArray","successMyCanvas","setSuccessMyCanvas","peerRef","RTCPeerConnection","iceServers","urls","holisticRef","dataChannelRef","roomID","useParams","calculateVideo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","current","send","image","stop","apply","arguments","myAnimate","_ref2","_callee2","_context2","abrupt","update","getDelta","render","requestAnimationFrame","setMedia","_ref3","_callee4","holistic","myCamera","stream","_context4","Holistic","locateFile","file","sent","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","refineFaceLandmarks","Camera","onFrame","_onFrame","_callee3","_context3","width","height","start","g","srcObject","t0","console","error","getMyModel","_ref4","_callee6","loader","_context6","GLTFLoader","crossOrigin","load","_ref5","_callee5","gltf","_context5","VRMUtils","removeUnnecessaryJoints","scene","VRM","from","then","v","add","rotation","y","Math","PI","_x","progress","log","loaded","total","setMyThree","WebGLRenderer","canvas","alpha","setPixelRatio","window","devicePixelRatio","PerspectiveCamera","position","set","orbitControls","OrbitControls","domElement","screenSpacePanning","target","light","DirectionalLight","normalize","Clock","getRemoteModel","_ref6","_callee8","_context8","_ref7","_callee7","_context7","_x2","setRemoteThree","createOffer","_ref10","_callee11","sdp","_context11","createDataChannel","onmessage","e","JSON","parse","data","onopen","setLocalDescription","emit","createAnswer","_ref11","_callee12","answerSdp","_context12","setRemoteDescription","_x4","rigRotation","vrmRef","name","_vrmRef$current$human","length","x","z","dampener","lerpAmount","Part","humanoid","getBoneNode","VRMSchema","HumanoidBoneName","euler","quaternion","Quaternion","setFromEuler","slerp","rigPosition","_vrmRef$current$human2","vector","Vector3","lerp","rigFace","riggedFace","oldLookTarget","_Blendshape$getValue","_Blendshape$getValue2","_Blendshape$getValue3","_Blendshape$getValue4","_Blendshape$getValue5","_Blendshape$getValue6","_Blendshape$getValue7","_vrmRef$current$lookA","_vrmRef$current$lookA2","head","Blendshape","blendShapeProxy","PresetName","BlendShapePresetName","eye","l","clamp","getValue","Blink","r","Kalidokit","stabilizeBlink","setValue","I","mouth","shape","A","E","O","U","lookTarget","pupil","copy","lookAt","applyer","onResults","results","_dataChannelRef$curre3","_dataChannelRef$curre4","riggedPose","riggedLeftHand","riggedRightHand","readyState","stringify","faceLandmarks","pose3DLandmarks","ea","pose2DLandmarks","poseLandmarks","leftHandLandmarks","rightHandLandmarks","solve","runtime","video","Hips","Spine","RightUpperArm","RightLowerArm","LeftUpperArm","LeftLowerArm","LeftUpperLeg","LeftLowerLeg","RightUpperLeg","RightLowerLeg","LeftHand","LeftWrist","LeftRingProximal","LeftRingIntermediate","LeftRingDistal","LeftIndexProximal","LeftIndexIntermediate","LeftIndexDistal","LeftMiddleProximal","LeftMiddleIntermediate","LeftMiddleDistal","LeftThumbProximal","LeftThumbIntermediate","LeftThumbDistal","LeftLittleProximal","LeftLittleIntermediate","LeftLittleDistal","RightHand","RightWrist","RightRingProximal","RightRingIntermediate","RightRingDistal","RightIndexProximal","RightIndexIntermediate","RightIndexDistal","RightMiddleProximal","RightMiddleIntermediate","RightMiddleDistal","RightThumbProximal","RightThumbIntermediate","RightThumbDistal","RightLittleProximal","RightLittleIntermediate","RightLittleDistal","remoteResults","useEffect","_callee13","_context13","socketIOClient","secure","addTrack","getTracks","onicecandidate","candidate","ondatachannel","channel","ontrack","room","on","allUsers","_ref8","_callee9","_context9","addIceCandidate","_x3","_callee10","_context10","setInterval","disconnect","close","forEach","track","_jsxs","_Fragment","children","_jsx","ref","onClick","_dataChannelRef$curre","_dataChannelRef$curre2","preventDefault","Link","to"],"sourceRoot":""}